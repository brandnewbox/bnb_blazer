<div id="queries">
  
  <div class="header" style="display: flex; justify-content: space-between">
    <%# TODO IAN we want to add the ability to specify a logo file in the gem's intitializer
    but wait to do this until we have a better idea of what we are doing%>
    <div class="logo">
      <%= image_tag "bnb_blazer/institute_logo.png", style: "height: 5rem;" %>
    </div>
    <div class="mobile-nav">
      <div class="menu-icon" id="menu-icon" style="display: flex; align-items: center;">
        <svg style="display: flex; flex-grow: 1;" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M3 6h18v2H3zm0 5h18v2H3zm0 5h18v2H3z"/></svg>
      </div>
    </div>
    <div class="desktop-nav" style="display:flex; align-items: center;">
      
      <%=link_to "All Entries", root_path, style: "padding: 10px" %>
      <%# TODO IAN I dont think we have a dashboards index? do we need to build one?%>
      <%=link_to "Dashboards", "#", style: "padding: 10px" %>
      <%=link_to "Queries", queries_path, style: "padding: 10px" %>
      <%=link_to "Checks", checks_path, style: "padding: 10px" %>
      <div class="btn-group nav-btn" style="display: flex; border: none; ">
        <button type="button" class="btn btn-link dropdown-toggle" style="text-decoration: none;" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          <div class="btn-primary rounded-pill" style="padding: 10px; display: inline;"> New Entry →</div>
        </button>
        <ul class="dropdown-menu">
          <li><%= link_to "New Dashboard", new_dashboard_path %></li>
          <li><%= link_to "New Check", new_check_path %></li>
          <li><%= link_to "New Query", new_query_path %></li>
        </ul>
      </div>
    </div>

    <div class="close-btn" id="close-btn" style="display: none; align-items: center;">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"  style=" background-color: white; border-radius: 30px"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" fill="#478bb3"/></svg>
    </div>
  </div>

  <div class="sidebar" id="sidebar">
    <%# TODO IAN rename this to something better %>
    <div id="primary-sidebar">
      <%=link_to "All Entries", root_path%>
      <%# TODO IAN I dont think we have a dashboards index? do we need to build one?%>
      <%=link_to "Dashboards", "#"%>
      <%=link_to "Queries", queries_path%>
      <%=link_to "Checks", checks_path%>
      <a href="#" id="new-entry" style="display: flex; justify-content: end;">
        <div class="btn-primary rounded-pill" style="padding: 10px; width: 50%;">
          New Entry →
        </div>
      </a>
    </div>

    <div id="secondary-sidebar" style="display: none;">
      <%# TODO IAN this close button isn't quite right %>
      <svg id="secondary-close-btn" width="40" height="40" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <circle cx="12" cy="12" r="10" fill="#ECECEC"/>
        <polygon points="14,8 10,12 14,16" fill="#4A4A4A"/>
      </svg>
      <p style="color: gray;"> NEW ENTRY </p>
      <%=link_to "New Dashboard", new_dashboard_path%>
      <%=link_to "New Query", new_query_path%>
      <%=link_to "Checks", new_check_path%>
    </div>
  </div>

  <div class="card" style="margin-top: 80px;">
    <table class="table">
      <thead>
        <tr>
          <th>Name</th>
          <% if Blazer.user_class %>
            <th style="width: 20%; text-align: right;">Mastermind</th>
          <% end%>
        </tr>
      </thead>
      <tbody class="list" v-cloak>
        <tr v-for="query in visibleItems">
          <td>
            <a :href="itemPath(query)" :class="{ dashboard: query.dashboard }">{{ query.name }}</a>
            <span class="vars">{{ query.vars }}</span>
          </td>
          <% if Blazer.user_class %>
            <td class="creator">{{ query.creator }}</td>
          <% end %>
        </tr>
      </tbody>
    </table>
  </div>

  <p v-if="more" class="text-muted">Loading...</p>
</div>

<script>
  <%= blazer_js_var "dashboards", @dashboards %>
  <%= blazer_js_var "queries", @queries %>
  <%= blazer_js_var "more", @more %>

  var prepareSearch = function (list) {
    var i, q, searchStr
    for (i = 0; i < list.length; i++) {
      q = list[i]
      searchStr = q.name + q.creator
      if (q.creator === "You") {
        searchStr += "mine me"
      }
      q.searchStr = prepareQuery(searchStr)
    }
  }

  var prepareQuery = function (str) {
    return str.toLowerCase()
  }

  var app = new Vue({
    el: "#queries",
    data: {
      searchTerm: "",
      more: more,
      updateCounter: 0
    },
    created: function() {
      this.listItems = dashboards.concat(queries)

      prepareSearch(this.listItems)

      this.queryIds = {}
      for (i = 0; i < queries.length; i++) {
        this.queryIds[queries[i].id] = true
      }

      if (this.more) {
        var _this = this

        $.getJSON(Routes.queries_path(), function (data) {
          var i, j, newValues, val, size = 500;

          var newValues = []
          for (j = 0; j < data.length; j++) {
            val = data[j]
            if (val && !_this.queryIds[val.id]) {
              newValues.push(val)
            }
          }

          prepareSearch(newValues)

          _this.listItems = _this.listItems.concat(newValues)
          _this.more = false
          // hack to get to update
          _this.updateCounter++
        })
      }
    },
    computed: {
      visibleItems: function () {
        // hack to get to update
        this.updateCounter

        var pageSize = 200
        var q, i

        if (this.searchTerm.length > 0) {
          var term = prepareQuery(this.searchTerm)
          var items = []
          var fuzzyItems = []
          for (i = 0; i < this.listItems.length; i++) {
            q = this.listItems[i]
            if (q.searchStr.indexOf(term) !== -1) {
              items.push(q)
              if (items.length == pageSize) {
                break
              }
            } else if (fuzzysearch(term, q.searchStr)) {
              fuzzyItems.push(q)
            }
          }
          return items.concat(fuzzyItems).slice(0, pageSize)
        } else {
          return this.listItems.slice(0, pageSize)
        }
      }
    },
    methods: {
      itemPath: function (item) {
        if (item.dashboard) {
          return Routes.dashboard_path(item.to_param)
        } else {
          return Routes.query_path(item.to_param)
        }
      }
    },
    directives: {
      focus: {
        inserted: function (el) {
          el.focus()
        }
      }
    }
  })

  document.getElementById('menu-icon').addEventListener('click', function() {
    document.getElementById('sidebar').classList.add('open');
    document.getElementById('menu-icon').style.display = "none";
    document.getElementById('close-btn').style.display = "flex";
  });

  document.getElementById('close-btn').addEventListener('click', function() {
    document.getElementById('sidebar').classList.remove('open');
    document.getElementById('menu-icon').style.display = "flex";
    document.getElementById('close-btn').style.display = "none";
  });
  document.getElementById('new-entry').addEventListener('click', function() {
    document.getElementById('sidebar').classList.add('align-start');
    document.getElementById('primary-sidebar').style.display = "none";
    document.getElementById('secondary-sidebar').style.display = "block";
  });
  document.getElementById('secondary-close-btn').addEventListener('click', function() {
    document.getElementById('sidebar').classList.remove('align-start');
    document.getElementById('primary-sidebar').style.display = "block";
    document.getElementById('secondary-sidebar').style.display = "none";
  });
</script>